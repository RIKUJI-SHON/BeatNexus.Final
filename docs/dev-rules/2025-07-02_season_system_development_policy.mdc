---
description: 
globs: 
alwaysApply: true
---
# シーズン機能開発・デプロイ方針

## 📅 方針策定日
2025-07-02

## 🎯 目的
シーズン機能開発における、開発環境と本番環境の不整合問題を解決し、安全かつ効率的に本番リリースを行うための開発・デプロイプロセスを定義する。

## 🌊 開発フロー

1.  **開発は開発環境（`wdttluticnlqzmqmfvgt`）で実施**:
    - 全ての新規機能実装、修正、テストは、まず開発環境のデータベースに対して行います。

2.  **マイグレーションによる変更管理**:
    - データベーススキーマや関数への変更は、全て `supabase/migrations/` ディレクトリ内のSQLファイルとして管理します。

3.  **段階的な本番適用**:
    - 開発環境で機能単位の動作確認が完了したマイグレーションスクリプトは、本番環境（`qgqcjtjxaoplhxurbpis`）へ適用を試みます。
    - **小さな単位で頻繁に適用**し、問題の早期発見に努めます。

## 🩹 不整合発生時の対応プロセス

本番環境へのマイグレーション適用時に、開発環境との差分（例: カラム名やデータ型の違い）が原因でエラーが発生した場合は、以下の手順で対応します。

1.  **原因特定**: エラーメッセージを元に、開発環境と本番環境のどの定義が不整合を起こしているかを特定します。

2.  **開発環境の修正**: **本番環境の定義が正**とし、開発環境のスキーマや関数を本番環境の定義に合わせるように修正します。この修正も新しいマイグレーションファイルとして作成します。

3.  **マイグレーションスクリプトの修正**:
    - 元々本番に適用しようとして失敗したマイグレーションスクリプトを、修正後の開発環境（＝本番環境と互換性がある状態）で問題なく動作するように修正します。

4.  **再適用**:
    - まず、手順2で作成した「開発環境を本番に合わせるためのマイグレーション」を開発環境に適用します。
    - 次に、手順3で修正した「本来の機能追加用のマイグレーション」を、まず開発環境でテストし、その後本番環境へ適用します。

## 🔑 基本原則
- **本番環境は正義**: 不整合があった場合、原則として本番環境のスキーマ定義を優先します。
- **Source of Truthはリポジトリ**: 全ての変更はマイグレーションファイルとしてGitリポジトリで管理します。
- **手動でのDB変更は禁止**: Supabaseのダッシュボード等から直接スキーマを変更することは、緊急時を除き禁止します。

この方針に従うことで、環境間の差異を吸収しつつ、安全に新機能のリリースを目指します。

